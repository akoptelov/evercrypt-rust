(function() {var implementors = {};
implementors["evercrypt"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"evercrypt/aead/enum.Mode.html\" title=\"enum evercrypt::aead::Mode\">Mode</a>","synthetic":false,"types":["evercrypt::aead::Mode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"evercrypt/aead/enum.Mode.html\" title=\"enum evercrypt::aead::Mode\">Mode</a>&gt; for <a class=\"type\" href=\"evercrypt_sys/evercrypt_bindings/type.Spec_Agile_AEAD_alg.html\" title=\"type evercrypt_sys::evercrypt_bindings::Spec_Agile_AEAD_alg\">Spec_Agile_AEAD_alg</a>","synthetic":false,"types":["evercrypt_sys::evercrypt_bindings::Spec_Agile_AEAD_alg"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"evercrypt/digest/enum.Mode.html\" title=\"enum evercrypt::digest::Mode\">Mode</a>","synthetic":false,"types":["evercrypt::digest::Mode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"evercrypt/digest/enum.Mode.html\" title=\"enum evercrypt::digest::Mode\">Mode</a>&gt; for <a class=\"type\" href=\"evercrypt_sys/evercrypt_bindings/type.Spec_Hash_Definitions_hash_alg.html\" title=\"type evercrypt_sys::evercrypt_bindings::Spec_Hash_Definitions_hash_alg\">Spec_Hash_Definitions_hash_alg</a>","synthetic":false,"types":["evercrypt_sys::evercrypt_bindings::Spec_Hash_Definitions_hash_alg"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()